name: "Lime Maven Release"
description: "Performs a build and maven deployment similar to a maven release with commits pushed at the end."
inputs:
  aws-region:
    description: 'AWS Region name'
    required: true
  role-to-assume:
    description: 'AWS Role ARN to run with'
    required: true
  code-signing-key:
    description: 'Code signing GPG key data'
    required: true
  code-signing-key-name:
    description: 'Code signing GPT key name'
  git-access-key:
    description: 'Github access key (SSH)'
    required: true
  git-signing-key:
    description: 'Github Commit signing GPG key data'
    required: true
  custom-maven-settings-file:
    description: 'Path to custom settings file for release build'
    required: true

runs:
  using: composite
  steps:
    - name: Environment Setup
      uses: LimeMojito/oss-maven-standards/.github/actions/lime-env-setup@master
      with:
        aws-region: ${{ inputs.aws-region }}
        role-to-assume: ${{ inputs.role-to-assume }}
        code-signing-key: ${{ inputs.code-signing-key }}

    - name: Import GPG key for Version Update
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ inputs.git-signing-key }}
        git_committer_email: "build@limemojito.com"
        git_committer_name: "Lime Build Agent"
        git_user_signingkey: true
        git_push_gpgsign: false
        git_tag_gpgsign: true
        git_commit_gpgsign: true
        git_config_global: true

    - id: git_setup
      name: Prepare Release Build with Maven
      shell: bash
      run: |
        # avoid commits using a standard ignore directory
        KEY_PATH=$PWD/target/git-commit-key
        echo '${{ inputs.git-access-key }}' > $KEY_PATH
        chmod 600 $KEY_PATH
        
        git config core.sshCommand "ssh -i $KEY_PATH"
        remote_url="$(git config --get remote.origin.url)"
        url="$(echo $remote_url | sed -r 's/https:\/\/github.com\/([^/]+)/git@github.com:\1/').git"  
        echo "Switched origin from $remote_url to $url"
        git remote set-url origin "$url"
        
        echo "lime-git-url=${url}" >> "$GITHUB_OUTPUT"
        echo "commit-key=${KEY_PATH}" >> "$GITHUB_OUTPUT"

    - id: git_release_version
      name: Increment Release Version
      shell: bash
      run: |
        mvn -B -Dstyle.color=always build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} versions:commit
        projectVersion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout )
        git add .
        git commit -S -m "[Release] updated version in pom.xml"
        tagName="$projectVersion-${{github.run_number}}"
        git tag -a $tagName -m "[Release] Release Tag"
        
        echo "lime-release-version=$tagName" >> "$GITHUB_OUTPUT"

    - name: Increment development version
      shell: bash
      run: |
        mvn -B -Dstyle.color=always build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT versions:commit
        git add .
        git commit -S -m "[Development] updated development version in pom.xml"

    - name: Perform Release Build with Maven
      shell: bash
      run: |
        git checkout ${{steps.git_release_version.outputs.lime-release-version}}
        # deploy to OSSRH
        mvn -B --settings ${{inputs.custom-maven-settings-file}} -Prelease -Dbuild.number=${{github.run_number}} -Dgpg.keyname='${{inputs.code-signing-key-name}}' deploy

    - name: Push version and tag to repository
      shell: bash
      run: |
        # Release builds are always on master.
        git checkout master
        git push
        git push origin tag ${{steps.git_release_version.outputs.lime-release-version}}

    - name: Remove Git Credentials
      shell: bash
      if: always()
      run: |
        rm -f ${{ steps.git_setup.outputs.commit-key }}

    - name: Remove Custom Maven Settings
      shell: bash
      if: always()
      run: |
        rm -f ${{ inputs.custom-maven-settings-file }}
